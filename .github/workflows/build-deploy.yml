name: Build and deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.2'
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          architecture: x64

      - name: Install modules
        run: flutter pub get

      - name: Build web
        run: flutter build web --target lib/app/app.dart

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Nginx build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.docker/nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/esenin-family-app-nginx:latest

  pull-containers:
    name: Pull containers

    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Remove docker images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_NODE_USERNAME }}
          key: ${{ secrets.SSH_NODE_PRIVATE_KEY }}
          script: |
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/esenin-family-app-nginx || true

      - name: Pull docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_NODE_USERNAME }}
          key: ${{ secrets.SSH_NODE_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/esenin-family-app-nginx

  deploy:
    name: Deploy

    needs: [build, pull-containers]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Stop containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_NODE_USERNAME }}
          key: ${{ secrets.SSH_NODE_PRIVATE_KEY }}
          script: |
            docker container stop esenin-family-app-nginx || true
            docker rm esenin-family-app-nginx || true

      - name: Run nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_NODE_USERNAME }}
          key: ${{ secrets.SSH_NODE_PRIVATE_KEY }}
          script: |
            docker run --name esenin-family-app-nginx \
            --rm -d \
            --network="fuks-ru" \
            difuks/esenin-family-app-nginx


  notification:
      name: Notification

      needs: [build, pull-containers, deploy]

      runs-on: ubuntu-latest

      if: always()

      steps:
        - name: Send telegram message
          uses: appleboy/telegram-action@master
          env:
            COMMIT_URL: ${{ github.server_url }}/${{ github.repository }}/commit/${{github.sha}}
            ACTION_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            format: markdown
            disable_web_page_preview: true
            message: |
              *esenin-family-app*
              
              [build and deploy](${{ env.ACTION_URL }}) by *${{ github.actor }}*
              
              steps:
              build *${{ needs.build.result == 'success' && '✅' || '⛔️' }}*
              pull-containers *${{ needs.pull-containers.result == 'success' && '✅' || '⛔️' }}*
              deploy *${{ needs.deploy.result == 'success' && '✅' || '⛔️' }}*
              
              [commit](${{ env.COMMIT_URL }})
